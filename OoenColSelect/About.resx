<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="Guna2HtmlLabel1.Text" xml:space="preserve">
    <value>    &lt;h1&gt;OoenColSelect - 顏色選擇工具&lt;/h1&gt;
    
    &lt;p&gt;&lt;strong&gt;OoenColSelect&lt;/strong&gt; 是一個功能強大的顏色選擇工具，它允許您輕鬆地獲取屏幕上任何位置的顏色信息。&lt;/p&gt;

    &lt;h2&gt;主要功能：&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;strong&gt;即時顏色監控：&lt;/strong&gt; OoenColSelect 不斷監測您的滑鼠游標位置，並顯示游標所在位置的顏色信息。&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;RGBA 和 HEX 顏色碼：&lt;/strong&gt; 它將為您提供游標所在位置的顏色的RGBA（紅綠藍透明度）和HEX（十六進制）顏色碼。&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;CMYK 顏色碼：&lt;/strong&gt; OoenColSelect 還提供了游標所在位置的CMYK（青色、洋紅、黃色、黑色）顏色碼。&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;剪貼板複製：&lt;/strong&gt; 您可以輕鬆地將顏色信息複製到剪貼板，以便在其他應用程序中使用。&lt;/li&gt;
    &lt;/ul&gt;

    &lt;h2&gt;如何使用：&lt;/h2&gt;
    &lt;ol&gt;
        &lt;li&gt;執行 OoenColSelect 軟體。&lt;/li&gt;
        &lt;li&gt;將滑鼠游標移動到您想要檢查的顏色位置。&lt;/li&gt;
        &lt;li&gt;軟體將即時顯示該位置的RGBA、HEX和CMYK顏色碼。&lt;/li&gt;
        &lt;li&gt;按下 F9 鍵複製RGBA顏色、F10 鍵複製HEX顏色、F11 鍵複製CMYK顏色到剪貼板。&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;&lt;strong&gt;OoenColSelect&lt;/strong&gt; 是一個非常實用的工具，特別適合設計師、開發人員和任何需要準確顏色選擇的用戶。快來嘗試它，使您的顏色選擇過程更加輕鬆！&lt;/p&gt;</value>
  </data>
</root>